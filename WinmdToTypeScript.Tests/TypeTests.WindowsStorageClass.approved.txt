declare module Windows.Storage {

    interface IStorageFile extends  Windows.Storage.IStorageItem,  Windows.Storage.Streams.IRandomAccessStreamReference,  Windows.Storage.Streams.IInputStreamReference {
        contentType: string;
        fileType: string;
        openAsync(accessMode: FileAccessMode, ): WinJS.Promise<Windows.Storage.Streams.IRandomAccessStream>;
        openTransactedWriteAsync(): WinJS.Promise<Windows.Storage.StorageStreamTransaction>;
        copyAsync(destinationFolder: IStorageFolder, ): WinJS.Promise<Windows.Storage.StorageFile>;
        copyAsync(destinationFolder: IStorageFolderdesiredNewName: string, ): WinJS.Promise<Windows.Storage.StorageFile>;
        copyAsync(destinationFolder: IStorageFolderdesiredNewName: stringoption: NameCollisionOption, ): WinJS.Promise<Windows.Storage.StorageFile>;
        copyAndReplaceAsync(fileToReplace: IStorageFile, ): IAsyncAction;
        moveAsync(destinationFolder: IStorageFolder, ): IAsyncAction;
        moveAsync(destinationFolder: IStorageFolderdesiredNewName: string, ): IAsyncAction;
        moveAsync(destinationFolder: IStorageFolderdesiredNewName: stringoption: NameCollisionOption, ): IAsyncAction;
        moveAndReplaceAsync(fileToReplace: IStorageFile, ): IAsyncAction;
    }

    interface IStorageItem {
        attributes: FileAttributes;
        dateCreated: Date;
        name: string;
        path: string;
        renameAsync(desiredName: string, ): IAsyncAction;
        renameAsync(desiredName: stringoption: NameCollisionOption, ): IAsyncAction;
        deleteAsync(): IAsyncAction;
        deleteAsync(option: StorageDeleteOption, ): IAsyncAction;
        getBasicPropertiesAsync(): WinJS.Promise<Windows.Storage.FileProperties.BasicProperties>;
        isOfType(type: StorageItemTypes, ): Boolean;
    }

    interface IStorageItemProperties {
        displayName: string;
        displayType: string;
        folderRelativeId: string;
        properties: StorageItemContentProperties;
        getThumbnailAsync(mode: ThumbnailMode, ): WinJS.Promise<Windows.Storage.FileProperties.StorageItemThumbnail>;
        getThumbnailAsync(mode: ThumbnailModerequestedSize: UInt32, ): WinJS.Promise<Windows.Storage.FileProperties.StorageItemThumbnail>;
        getThumbnailAsync(mode: ThumbnailModerequestedSize: UInt32options: ThumbnailOptions, ): WinJS.Promise<Windows.Storage.FileProperties.StorageItemThumbnail>;
    }

    export class StorageFile extends IStorageFile, IStorageItem, IRandomAccessStreamReference, IInputStreamReference{
        displayName: string;
        displayType: string;
        folderRelativeId: string;
        properties: StorageItemContentProperties;
        openReadAsync(): IAsyncOperation`1;
        openSequentialReadAsync(): IAsyncOperation`1;
        getThumbnailAsync(mode: ThumbnailMode, ): IAsyncOperation`1;
        getThumbnailAsync(mode: ThumbnailModerequestedSize: UInt32, ): IAsyncOperation`1;
        getThumbnailAsync(mode: ThumbnailModerequestedSize: UInt32options: ThumbnailOptions, ): IAsyncOperation`1;
        getFileFromPathAsync(path: string, ): IAsyncOperation`1;
        getFileFromApplicationUriAsync(uri: Uri, ): IAsyncOperation`1;
        createStreamedFileAsync(displayNameWithExtension: stringdataRequested: StreamedFileDataRequestedHandlerthumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
        replaceWithStreamedFileAsync(fileToReplace: IStorageFiledataRequested: StreamedFileDataRequestedHandlerthumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
        createStreamedFileFromUriAsync(displayNameWithExtension: stringuri: Urithumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
        replaceWithStreamedFileFromUriAsync(fileToReplace: IStorageFileuri: Urithumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
    }

}
declare module Windows.Storage.Streams {

    interface IInputStreamReference {
        openSequentialReadAsync(): WinJS.Promise<Windows.Storage.Streams.IInputStream>;
    }

    interface IRandomAccessStreamReference {
        openReadAsync(): WinJS.Promise<Windows.Storage.Streams.IRandomAccessStreamWithContentType>;
    }

}
