declare module Windows.Storage {

    export IInputStreamReference {
        IAsyncOperation<IInputStream> OpenSequentialReadAsync();
    }
    export IRandomAccessStreamReference {
        IAsyncOperation<IRandomAccessStreamWithContentType> OpenReadAsync();
    }

    export IStorageItem {
        attributes: FileAttributes;
        dateCreated: Date;
        name: string;
        path: string;
        deleteAsync(): IAsyncAction;
        deleteAsync(option: StorageDeleteOption, ): IAsyncAction;
        renameAsync(desiredName: string, ): IAsyncAction;
        renameAsync(desiredName: stringoption: NameCollisionOption, ): IAsyncAction;
        getBasicPropertiesAsync(): IAsyncOperation`1;
        isOfType(type: StorageItemTypes, ): Boolean;
    }

    interface IStorageFile extends IStorageItem, IRandomAccessStreamReference, IInputStreamReference {
        contentType: string;
        fileType: string;
        openAsync(accessMode: FileAccessMode, ): IAsyncOperation`1;
        openTransactedWriteAsync(): IAsyncOperation`1;
        copyAsync(destinationFolder: IStorageFolder, ): IAsyncOperation`1;
        copyAsync(destinationFolder: IStorageFolderdesiredNewName: string, ): IAsyncOperation`1;
        copyAsync(destinationFolder: IStorageFolderdesiredNewName: stringoption: NameCollisionOption, ): IAsyncOperation`1;
        copyAndReplaceAsync(fileToReplace: IStorageFile, ): IAsyncAction;
        moveAsync(destinationFolder: IStorageFolder, ): IAsyncAction;
        moveAsync(destinationFolder: IStorageFolderdesiredNewName: string, ): IAsyncAction;
        moveAsync(destinationFolder: IStorageFolderdesiredNewName: stringoption: NameCollisionOption, ): IAsyncAction;
        moveAndReplaceAsync(fileToReplace: IStorageFile, ): IAsyncAction;
    }

    export class StorageFile extends IStorageFile, IStorageItem, IRandomAccessStreamReference, IInputStreamReference{
        displayName: string;
        displayType: string;
        folderRelativeId: string;
        properties: StorageItemContentProperties;
        openReadAsync(): IAsyncOperation`1;
        openSequentialReadAsync(): IAsyncOperation`1;
        getThumbnailAsync(mode: ThumbnailMode, ): IAsyncOperation`1;
        getThumbnailAsync(mode: ThumbnailModerequestedSize: UInt32, ): IAsyncOperation`1;
        getThumbnailAsync(mode: ThumbnailModerequestedSize: UInt32options: ThumbnailOptions, ): IAsyncOperation`1;
        getFileFromPathAsync(path: string, ): IAsyncOperation`1;
        getFileFromApplicationUriAsync(uri: Uri, ): IAsyncOperation`1;
        createStreamedFileAsync(displayNameWithExtension: stringdataRequested: StreamedFileDataRequestedHandlerthumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
        replaceWithStreamedFileAsync(fileToReplace: IStorageFiledataRequested: StreamedFileDataRequestedHandlerthumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
        createStreamedFileFromUriAsync(displayNameWithExtension: stringuri: Urithumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
        replaceWithStreamedFileFromUriAsync(fileToReplace: IStorageFileuri: Urithumbnail: IRandomAccessStreamReference, ): IAsyncOperation`1;
    }
}
