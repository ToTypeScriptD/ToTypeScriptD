declare module WinmdToTypeScript.Native {
    interface SomethingHappenedEventHandler{
    }
}
declare module WinmdToTypeScript.Native {
    export class ClassWithEventHandler{
        addEventListener(type: string, listener: EventListener): void;
        removeEventListener(type: string, listener: EventListener): void;
        onsomethinghappened(ev: any);
        constructor();
        doSomething();
    }
}
declare module WinmdToTypeScript.Native {
    export class Class1{
        constructor();
    }
}
declare module WinmdToTypeScript.Native {
    enum SampleEnum{
        A = 0,
        B = 1,
        C = 2,
        D = 3
    }
}
declare module WinmdToTypeScript.Native {
    enum SampleEnumNumbered{
        A = 1,
        B = 10,
        C = 100,
        D = 99
    }
}
